- name: Provision EC2 via Terraform (with var file)
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    tf_build: "ansible01"
    terraform_working_dir: /tmp/srv
    terraform_state: present

    tf_project_dir: "{{ terraform_working_dir }}/aws"
    tf_var_file: "{{ tf_project_dir }}/terraform.tfvars"

    aap_password: "{{ lookup('env', 'AAP_PASSWORD') }}"

  tasks:
    - name: Clone Terraform Repo
      ansible.builtin.git:
        repo: 'https://github.com/taiseerhussein/terraform-files.git'
        version: main
        accept_newhostkey: true
        # key_file: "{{ cert_key_file }}"
        dest: "{{ terraform_working_dir }}"

    - name: Check Terraform formatting (lints only)
      ansible.builtin.command:
        cmd: terraform fmt -check -recursive
        chdir: "{{ tf_project_dir }}"
      register: tf_fmt_check
      changed_when: false            # lint step never marks changed
      failed_when: tf_fmt_check.rc not in [0,3]

    - name: Show files that would be reformatted
      when: tf_fmt_check.rc == 3
      ansible.builtin.debug:
        var: tf_fmt_check.stdout_lines

    - name: Auto-format Terraform files (because -check found issues)
      when: tf_fmt_check.rc == 3
      ansible.builtin.command:
        cmd: terraform fmt -recursive
        chdir: "{{ tf_project_dir }}"
      register: tf_fmt_fix
      changed_when: tf_fmt_fix.rc == 2
      failed_when: tf_fmt_fix.rc not in [0,2]

    - name: Re-check formatting to enforce cleanliness
      when: tf_fmt_check.rc == 3
      ansible.builtin.command:
        cmd: terraform fmt -check -recursive
        chdir: "{{ tf_project_dir }}"
      register: tf_fmt_recheck
      changed_when: false
      failed_when: tf_fmt_recheck.rc != 0

    - name: Summary of formatting
      ansible.builtin.debug:
        msg:
          - "Initial fmt check rc: {{ tf_fmt_check.rc }}"
          - >-
            {{ 'Files were reformatted.' if (tf_fmt_fix is defined and tf_fmt_fix.rc == 2)
              else 'No reformatting required.' }}
              
    - name: Terraform plan (CLI, with detailed exit code)
      ansible.builtin.command:
        cmd: terraform plan -out=tfplan -detailed-exitcode -input=false
        chdir: "{{ tf_project_dir }}"
      register: tf_plan_cli
      changed_when: tf_plan_cli.rc == 2
      failed_when: tf_plan_cli.rc not in [0,2]

    - name: Show plan summary (text)
      ansible.builtin.command:
        cmd: terraform show -no-color tfplan
        chdir: "{{ tf_project_dir }}"
      register: tf_plan_show
      changed_when: false

    - name: Print plan (trimmed)
      ansible.builtin.debug:
        msg: "{{ tf_plan_show.stdout }}"
